
# Rather than use the directory name, let's control the name of the project.
export COMPOSE_PROJECT_NAME=baseapp

# Which environment is running? These should be "development" or "production".
#export RAILS_ENV=production
#export NODE_ENV=production
export RAILS_ENV=development
export NODE_ENV=development

## Secret keys
# You can use `rails secret` command to generate a secret key
export SECRET_KEY_BASE=insecure-key
export DEVISE_JWT_SECRET_KEY=my-jwt-secret-key

# In development we want all services to start but in production you don't
# need the asset watchers to run since assets get built into the image.
#
# You can even choose not to run postgres and redis in prod if you plan to use
# managed cloud services. Everything "just works", even optional depends_on!
#export COMPOSE_PROFILES=postgres,redis,web,worker,cable
export COMPOSE_PROFILES=postgres,redis,assets,web,worker,cable

## Host
export DEFAULT_HOST=example.com

## Puma
# export PORT=3000
## Workers and threads count
# export WEB_CONCURRENCY=2
# export RAILS_MAX_THREADS=5
# export RAILS_MIN_THREADS=5

## Postgres
# export POSTGRES_HOST=postgres
# export POSTGRES_PORT=5432
export POSTGRES_USER=baseapp
export POSTGRES_PASSWORD=123456
export POSTGRES_DB=baseapp

## Redis URL
# export REDIS_URL=redis://redis:6379/1
# export REDIS_CHANNEL_PREFIX=baseapp

## Action cable
# export ACTION_CABLE_URL=ws://localhost:28080
# export ACTION_CABLE_ALLOWED_REQUEST_ORIGINS=http:\/\/localhost*
# Examples:
#   http:\/\/localhost*
#   http:\/\/example.*,https:\/\/example.*

## Sidekiq web
# export SIDEKIQ_WEB_USERNAME=sidekiq-web-dashboard
# export SIDEKIQ_WEB_PASSWORD=sidekiq-web-123

## Vite
export VITE_RUBY_HOST=0.0.0.0

# frontend config
VITE_API_URL=http://localhost:3000
